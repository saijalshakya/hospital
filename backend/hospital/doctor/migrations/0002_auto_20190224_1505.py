# Generated by Django 2.0.13 on 2019-02-24 15:05

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('doctor', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Booking',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('service', models.CharField(max_length=500)),
                ('fn', models.CharField(max_length=100)),
                ('ln', models.CharField(max_length=100)),
                ('email', models.CharField(blank=True, max_length=500, null=True)),
                ('phone', models.CharField(max_length=800)),
                ('location', models.CharField(max_length=300)),
                ('street1', models.CharField(max_length=200)),
                ('street2', models.CharField(blank=True, max_length=200, null=True)),
                ('city', models.CharField(max_length=200)),
                ('state', models.CharField(blank=True, max_length=100, null=True)),
                ('postal', models.CharField(blank=True, max_length=100, null=True)),
                ('confirm', models.CharField(choices=[('1', 'Confirmed'), ('0', 'Unconfirmed')], default='0', max_length=1)),
            ],
        ),
        migrations.CreateModel(
            name='Review',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rate', models.CharField(max_length=100)),
                ('title', models.CharField(max_length=500)),
                ('rev', models.CharField(max_length=1000)),
                ('status', models.CharField(choices=[('1', 'Publish'), ('0', 'Unpublished')], default=0, max_length=1, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Service',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=500)),
                ('price', models.CharField(max_length=500)),
                ('status', models.BooleanField(default=0)),
                ('soft', models.BooleanField(default=1)),
            ],
        ),
        migrations.CreateModel(
            name='Type',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=500)),
                ('created_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('status', models.CharField(choices=[('1', 'Publish'), ('0', 'Unpublished')], max_length=1, null=True)),
                ('soft', models.BooleanField(default=1)),
                ('counter', models.CharField(blank=True, default=0, max_length=1000, null=True)),
            ],
        ),
        migrations.RemoveField(
            model_name='doctor',
            name='email',
        ),
        migrations.RemoveField(
            model_name='doctor',
            name='password',
        ),
        migrations.RemoveField(
            model_name='doctor',
            name='username',
        ),
        migrations.AddField(
            model_name='doctor',
            name='user',
            field=models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='doctor',
            name='views',
            field=models.CharField(blank=True, default=0, max_length=5000, null=True),
        ),
        migrations.AlterField(
            model_name='doctor',
            name='image',
            field=models.FileField(upload_to='', verbose_name='Doctor Image'),
        ),
        migrations.AddField(
            model_name='review',
            name='doctor',
            field=models.ManyToManyField(to='doctor.Doctor'),
        ),
        migrations.AddField(
            model_name='booking',
            name='doctor',
            field=models.ManyToManyField(to='doctor.Doctor'),
        ),
        migrations.AddField(
            model_name='doctor',
            name='service',
            field=models.ManyToManyField(to='doctor.Service'),
        ),
        migrations.AddField(
            model_name='doctor',
            name='type',
            field=models.ManyToManyField(to='doctor.Type'),
        ),
    ]
